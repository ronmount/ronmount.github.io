# -*- coding: utf-8 -*-

import itertools
import pyrogram
from pyrogram import *
from requests import get

import re

ip = get('https://api.ipify.org').text
proxy = None
if ip != '91.215.155.217':
    proxy = dict(
        hostname="orbtl.s5.opennetwork.cc",
        port=999,
        username="506702351",
        password="WQBnC2D7"
    )

bot = Client(
    api_id=142098,
    api_hash="6e1c38db937fc8cd0cf10517135f74cf",
    bot_token="1172197402:AAGG51CXUbfwlvzO5rpfrTcE6ffu37jW7UQ",
    session_name="ronmount",
    proxy=proxy,
)

bot.set_parse_mode('html')

a = []
_a = []
rules_list = []
searching_now = False
combinations_list = ''

fruits = {
    1: 'üçã',
    2: 'üçá',
    3: 'üçè',
    4: 'ü•ï',
    5: 'üçÖ',
}


async def clear(m):
    global a
    global _a
    global rules_list
    global searching_now

    a.clear()
    _a.clear()
    rules_list = []
    searching_now = False

    text = '<b>–í—Å–µ —Å–ø–∏—Å–∫–∏ –æ—á–∏—â–µ–Ω–Ω—ã.</b>\n\nüëâ/start –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞'

    await bot.send_message(m.chat.id, text, reply_to_message_id=m.message_id)


async def start(m):
    global searching_now
    if not searching_now:
        searching_now = True
        for i in itertools.product('12345', repeat=5):
            a.append(i[0] + i[1] + i[2] + i[3] + i[4])
        await bot.send_message(m.chat.id, 'üëå–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫. –ñ–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n1) <b>"12345 2"</b>\n'
                                          '2) <b>"üçãüçáüçèü•ïüçÖ<–ü–†–û–ë–ï–õ>2"</b>',
                               reply_to_message_id=m.message_id)
    else:
        await bot.send_message(m.chat.id, '‚ùå–ü–æ–∏—Å–∫ —Å–º—É–∑–∏ <b>—É–∂–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª</b>.\n–û—á–∏—Å—Ç–∫–∞ - /clear',
                               reply_to_message_id=m.message_id)


async def searching(m, fruit_message):
    global a
    global _a
    global rules_list
    global combinations_list
    if searching_now:
        combinations_list = ''
        x_pt1 = fruit_message[0:5]
        try:
            x_pt2 = int(fruit_message[6])
            count = 0
            rules_list.append(fruit_message)
            for j in a:
                for i in range(0, 5):
                    if int(x_pt1[i]) == int(j[i]):
                        count += 1
                if x_pt2 == count - ((count - 1) - abs(count - 1)) // 2:
                    _a.append(j)
                    for k in j:
                        combinations_list += fruits[int(k)]
                    combinations_list += '\n'
                count = 0
            a = _a.copy()
            _a.clear()
        except Exception as err:
            print(err)
        if len(a) <= 20:
            if len(a) == 0:
                await bot.send_message(m.chat.id, 'üßê–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –≥–¥–µ-—Ç–æ –æ—à–∏–±—Å—è –∏ '
                                                  '–≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è —Å–≤–µ–ª–∏—Å—å –∫ –Ω—É–ª—é.\n'
                                                  '–ü–æ–ø—Ä–æ–±—É–π –±–∞—Ö–Ω—É—Ç—å /clear –∏ /start', reply_to_message_id=m.message_id)
            elif len(a) == 1:
                await bot.send_message(m.chat.id, 'üéâ <b>–†–µ—Ü–µ–ø—Ç —Å–º—É–∑–∏ –Ω–∞–π–¥–µ–Ω!</b>\n\n      ' + combinations_list[0:5] + '\n\n'
                                                  'üëâ–°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: /clear')
            else:
                await bot.send_message(m.chat.id, '<b>–ú—ã —É–∂–µ –±–ª–∏–∑–∫–æ!\n</b>' +
                                       combinations_list + '\n' + str(len(a)) + ' –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç',
                                       reply_to_message_id=m.message_id)
        else:
            await bot.send_message(m.chat.id, 'üçπ–í–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–µ–π—á–∞—Å: <b>' + str(len(a)) + '</b>\n\n'
                                              'üëâ–ü—Ä–æ—Å–º–æ—Ç—Ä: /combinations', reply_to_message_id=m.message_id)
    else:
        await bot.send_message(m.chat.id, '‚ÄºÔ∏è–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞ –µ—â–µ <b>–Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª</b>.\n\nüëâ/start –¥–ª—è –Ω–∞—á–∞–ª–∞',
                               reply_to_message_id=m.message_id)


async def rules(m):
    string = '<b>–°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª: </b>\n\n'
    for rule in rules_list:
        string += rule + '\n'
    await bot.send_message(m.chat.id, string, reply_to_message_id=m.message_id)


async def help(m):
    string = '<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n\n' \
             'üëâ/help - –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫\n' \
             'üëâ/start –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞\n' \
             'üëâ/rules - –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π\n' \
             'üëâ/combinations - –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤\n' \
             'üëâ/clear - –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ä–µ—à–µ–Ω–∏–π\n\n' \
             '–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–º—É–∑–∏ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å /start ' \
             '–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n1) <b>"12345 N"</b>     –∏–ª–∏ \n' \
             '2) <b>"üçãüçáüçèü•ïüçÖ<–ü–†–û–ë–ï–õ>N"</b>, \n–≥–¥–µ ' \
             '<b>12345</b> - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ—Ä—É–∫—Ç–æ–≤ –ø—Ä–∏ –≤–∞—Ä–∫–µ —Å–º—É–∑–∏, ' \
             'N - —Ü–∏—Ñ—Ä–∞ –æ—Ç –æ–¥–Ω–æ–≥–æ –¥–æ –ø—è—Ç–∏, ' \
             '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø—Ä–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ —Å–º—É–∑–∏.\n\n' \
             '–§—Ä—É–∫—Ç—ã: üçã-1, üçá-2, üçè-3, ü•ï-4, üçÖ-5\n' \
             'N: –ù–µ –æ—á–µ–Ω—å - 1, –Ω–µ–ø–ª–æ—Ö–æ–π - 2, —Ö–æ—Ä–æ—à–∏–π - 3, –æ—Ç–ª–∏—á–Ω—ã–π - 4, —à–∏–∫–∞—Ä–Ω—ã–π - 5'
    await bot.send_message(m.chat.id, string, reply_to_message_id=m.message_id)


async def combinations(m):
    if combinations_list != '':
        try:
            await bot.send_message(m.chat.id, combinations_list + '\n' + str(len(a)) + ' –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç',
                                   reply_to_message_id=m.message_id)
        except Exception:
            await bot.send_message(m.chat.id, '–ö–æ–º–±–∏–Ω–∞—Ü–∏–π –æ—á–µ–Ω—å –º–Ω–æ–≥–æ. –î–∞–≤–∞–π –Ω–µ –±—É–¥–µ–º –∑–∞—Ö–ª–∞–º–ª—è—Ç—å —á–∞—Ç? :)',
                                   reply_to_message_id=m.message_id)
    else:
        await bot.send_message(m.chat.id, '–ö–æ–º–±–∏–Ω–∞—Ü–∏–π –µ—â–µ –Ω–µ—Ç.\n'
                                          '–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–º—É–∑–∏ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å /start '
                                          '–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n1) <b>"12345 N"</b>     –∏–ª–∏ \n'
                                          '2) <b>"üçãüçáüçèü•ïüçÖ<–ü–†–û–ë–ï–õ>N"</b>, \n–≥–¥–µ '
                                          '<b>12345</b> - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ—Ä—É–∫—Ç–æ–≤ –ø—Ä–∏ –≤–∞—Ä–∫–µ —Å–º—É–∑–∏, '
                                          'N - —Ü–∏—Ñ—Ä–∞ –æ—Ç –æ–¥–Ω–æ–≥–æ –¥–æ –ø—è—Ç–∏, '
                                          '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø—Ä–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ —Å–º—É–∑–∏.\n\n'
                                          '–§—Ä—É–∫—Ç—ã: üçã-1, üçá-2, üçè-3, ü•ï-4, üçÖ-5\n'
                                          'N: –ù–µ –æ—á–µ–Ω—å - 1, –Ω–µ–ø–ª–æ—Ö–æ–π - 2, —Ö–æ—Ä–æ—à–∏–π - 3, –æ—Ç–ª–∏—á–Ω—ã–π - 4, —à–∏–∫–∞—Ä–Ω—ã–π - 5',
                               reply_to_message_id=m.message_id)


@bot.on_message()
async def main(_, m):
    # print(m.text)
    if m.chat.id == -1001479156990 or m.chat.id == 506702351:
        if "/clear" in m.text:
            await clear(m)
        elif "/start" in m.text:
            await start(m)
        elif "/rules" in m.text:
            await rules(m)
        elif "/help" in m.text:
            await help(m)
        elif "/combinations" in m.text:
            await combinations(m)
        elif re.match(r'[1-5]{5} [1-5]', m.text):
            print('numbers!')
            await searching(m, m.text)
        elif re.match('[üçãüçáüçèü•ïüçÖ]{5} [1-5]', m.text):
            fruit_message = re.match('[üçãüçáüçèü•ïüçÖ]{5} [1-5]', m.text)
            print('fruits!')
            text = ''
            for i in fruit_message.group(0)[0:5]:
                if i == 'üçã':
                    text += '1'
                elif i == 'üçá':
                    text += '2'
                elif i == 'üçè':
                    text += '3'
                elif i == 'ü•ï':
                    text += '4'
                else:
                    text += '5'
            try:
                await searching(m, text + ' ' + fruit_message.group(0)[6])
                print(text + fruit_message.group(0)[6])
            except Exception:
                await bot.send_message(m.chat.id, 'üò°<b>–ü—Ä–æ–≤–µ—Ä—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å<b>.\n5 —Ñ—Ä—É–∫—Ç–æ–≤, –ø—Ä–æ–±–µ–ª, —Ü–∏—Ñ—Ä–∞.')

            #for i in fruit_message.group(0)
        else:
            pass


bot.run()
